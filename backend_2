import java.io.IOException;
import java.io.OutputStream;
import java.net.InetSocketAddress;
import com.sun.net.httpserver.HttpServer;
import com.sun.net.httpserver.HttpHandler;
import com.sun.net.httpserver.HttpExchange;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.HashMap;
import java.util.Map;

public class Api_backend {

    public static void main(String[] args) throws Exception {
        HttpServer server = HttpServer.create(new InetSocketAddress(8000), 0);
        server.createContext("/register", new RegisterHandler());
        server.setExecutor(null); // creates a default executor
        server.start();
        System.out.println("Server started on port 8000");
    }

    static class RegisterHandler implements HttpHandler {
        @Override
        public void handle(HttpExchange exchange) throws IOException {
            if (exchange.getRequestMethod().equalsIgnoreCase("POST")) {
                Map<String, String> params = parseFormData(exchange.getRequestBody());
                String fullName = params.get("fullName");
                String mobileNo = params.get("mobileNo");
                String email = params.get("email");
                String address = params.get("address");
                String highestQualification = params.get("highestQualification");
                int year = Integer.parseInt(params.get("year"));
                int totalExperience = Integer.parseInt(params.get("totalExperience"));

                // Here you can perform the user registration logic
                // For now, just print the received data
                System.out.println("Received registration request:");
                System.out.println("Full Name: " + fullName);
                System.out.println("Mobile Number: " + mobileNo);
                System.out.println("Email: " + email);
                System.out.println("Address: " + address);
                System.out.println("Highest Qualification: " + highestQualification);
                System.out.println("Year: " + year);
                System.out.println("Total Experience: " + totalExperience);

                // Sending response
                String response = "User registered successfully!";
                exchange.sendResponseHeaders(200, response.getBytes().length);
                OutputStream os = exchange.getResponseBody();
                os.write(response.getBytes());
                os.close();
            }
        }

        private Map<String, String> parseFormData(InputStreamReader isr) throws IOException {
            Map<String, String> params = new HashMap<>();
            BufferedReader br = new BufferedReader(isr);
            String line = br.readLine();
            while (line != null) {
                String[] keyValue = line.split("=");
                if (keyValue.length == 2) {
                    params.put(keyValue[0], keyValue[1]);
                }
                line = br.readLine();
            }
            return params;
        }
    }
}
