import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;

import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;

public class RegistrationActivity extends AppCompatActivity {

    EditText fullNameEditText, mobileNoEditText, emailEditText, addressEditText;
    Button registerButton;

    DatabaseReference databaseReference;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_registration);

        // Initialize Firebase Database
        databaseReference = FirebaseDatabase.getInstance().getReference().child("users");

        // Initialize views
        fullNameEditText = findViewById(R.id.full_name_edit_text);
        mobileNoEditText = findViewById(R.id.mobile_no_edit_text);
        emailEditText = findViewById(R.id.email_edit_text);
        addressEditText = findViewById(R.id.address_edit_text);
        registerButton = findViewById(R.id.register_button);

        // Handle register button click
        registerButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                registerUser();
            }
        });
    }

    private void registerUser() {
        String fullName = fullNameEditText.getText().toString().trim();
        String mobileNo = mobileNoEditText.getText().toString().trim();
        String email = emailEditText.getText().toString().trim();
        String address = addressEditText.getText().toString().trim();

        // Check if any field is empty
        if (fullName.isEmpty() || mobileNo.isEmpty() || email.isEmpty() || address.isEmpty()) {
            Toast.makeText(this, "Please fill in all fields", Toast.LENGTH_SHORT).show();
            return;
        }

        // Create a unique key for the user
        String userId = databaseReference.push().getKey();

        // Create User object
        User user = new User(userId, fullName, mobileNo, email, address);

        // Save user to Firebase Database
        databaseReference.child(userId).setValue(user)
                .addOnCompleteListener(new OnCompleteListener<Void>() {
                    @Override
                    public void onComplete(@NonNull Task<Void> task) {
                        if (task.isSuccessful()) {
                            Toast.makeText(RegistrationActivity.this, "Registration successful", Toast.LENGTH_SHORT).show();
                            clearFields();
                        } else {
                            Toast.makeText(RegistrationActivity.this, "Failed to register. Please try again.", Toast.LENGTH_SHORT).show();
                        }
                    }
                });
    }

    private void clearFields() {
        fullNameEditText.setText("");
        mobileNoEditText.setText("");
        emailEditText.setText("");
        addressEditText.setText("");
    }
}
